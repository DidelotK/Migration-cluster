---
apiVersion: v1
kind: Namespace
metadata:
  name: vaultwarden
  labels:
    app.kubernetes.io/name: vaultwarden
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/name: vaultwarden
spec:
  serviceName: vaultwarden
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vaultwarden
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vaultwarden
    spec:
      containers:
        - name: vaultwarden
          image: vaultwarden/server:1.30.1
          ports:
            - containerPort: 80
              name: http
          env:
            - name: ROCKET_PORT
              value: "80"
            - name: WEBSOCKET_ENABLED
              value: "true"
            - name: ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-secret
                  key: admin_token
            - name: DATABASE_URL
              value: "sqlite:///data/db.sqlite3"
            - name: SMTP_HOST
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-secret
                  key: smtp_host
            - name: SMTP_FROM
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-secret
                  key: smtp_user
            - name: SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-secret
                  key: smtp_user
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vaultwarden-secret
                  key: smtp_password
            - name: SMTP_SECURITY
              value: "starttls"
            - name: SMTP_PORT
              value: "587"
            - name: DOMAIN
              value: "https://vault1.keltio.fr"
            - name: SIGNUPS_ALLOWED
              value: "false"
            - name: INVITATIONS_ALLOWED
              value: "true"
            - name: SHOW_PASSWORD_HINT
              value: "false"
          volumeMounts:
            - name: vaultwarden-data
              mountPath: /data
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
      imagePullSecrets:
        - name: scaleway-registry-secret
  volumeClaimTemplates:
    - metadata:
        name: vaultwarden-data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: local-path
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: vaultwarden
  namespace: vaultwarden
  labels:
    app.kubernetes.io/name: vaultwarden
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: vaultwarden
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vaultwarden
  namespace: vaultwarden
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/hostname: vault1.keltio.fr
    external-dns.alpha.kubernetes.io/ttl: "60"
  labels:
    app.kubernetes.io/name: vaultwarden
spec:
  rules:
    - host: vault1.keltio.fr
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: vaultwarden
                port:
                  name: http
  tls:
    - hosts:
        - vault1.keltio.fr
      secretName: vaultwarden-keltio-fr-tls
