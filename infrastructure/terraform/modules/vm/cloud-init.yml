#cloud-config

# Configuration cloud-init pour K3s
hostname: ${hostname}
timezone: ${timezone}

# Utilisateurs
users:
  - name: root
    ssh_authorized_keys:
      - ${ssh_public_key}
    shell: /bin/bash

# Packages à installer
packages:
%{ for package in packages ~}
  - ${package}
%{ endfor ~}

# Mise à jour du système
package_update: true
package_upgrade: true

# Configuration du système
write_files:
  - path: /etc/systemd/system/k3s-prerequisites.service
    content: |
      [Unit]
      Description=K3s Prerequisites Setup
      After=network.target

      [Service]
      Type=oneshot
      ExecStart=/usr/local/bin/setup-k3s-prerequisites.sh
      RemainAfterExit=yes

      [Install]
      WantedBy=multi-user.target
    permissions: '0644'

  - path: /usr/local/bin/setup-k3s-prerequisites.sh
    content: |
      #!/bin/bash
      set -e
      
      # Configuration du système pour K3s
      echo "=== Configuration K3s Prerequisites ==="
      
      # Désactiver le swap
      swapoff -a
      sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
      
      # Configuration des modules kernel
      cat <<EOF > /etc/modules-load.d/k3s.conf
      overlay
      br_netfilter
      EOF
      
      modprobe overlay
      modprobe br_netfilter
      
      # Configuration sysctl
      cat <<EOF > /etc/sysctl.d/k3s.conf
      net.bridge.bridge-nf-call-iptables  = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward                 = 1
      EOF
      
      sysctl --system
      
      # Configuration du firewall (UFW)
      ufw --force enable
      ufw default deny incoming
      ufw default allow outgoing
      ufw allow ssh
      ufw allow 80/tcp
      ufw allow 443/tcp
      ufw allow 6443/tcp  # K3s API server
      ufw allow 10250/tcp # Kubelet
      ufw allow 8472/udp  # Flannel VXLAN
      ufw allow 51820/udp # WireGuard (si utilisé)
      
      # Configuration des limites
      cat <<EOF >> /etc/security/limits.conf
      * soft nofile 65536
      * hard nofile 65536
      * soft nproc  65536
      * hard nproc  65536
      EOF
      
      # Créer les répertoires nécessaires
      mkdir -p /opt/k3s/{bin,config,data,logs}
      mkdir -p /var/lib/rancher/k3s
      mkdir -p /etc/rancher/k3s
      
      echo "=== K3s Prerequisites Setup Complete ==="
    permissions: '0755'

  - path: /etc/environment
    content: |
      KUBECONFIG=/etc/rancher/k3s/k3s.yaml
      K3S_DATA_DIR=/var/lib/rancher/k3s
    append: true

# Configuration du hostname
preserve_hostname: false
fqdn: ${hostname}.local

# Configuration SSH
ssh_pwauth: false
ssh_authorized_keys:
  - ${ssh_public_key}

# Commandes à exécuter
runcmd:
  - systemctl enable k3s-prerequisites.service
  - systemctl start k3s-prerequisites.service
  - |
    # Installation de Docker (optionnel, pour debug)
    curl -fsSL https://get.docker.com -o get-docker.sh
    sh get-docker.sh
    usermod -aG docker root
  - |
    # Optimisation du système
    echo 'vm.max_map_count=262144' >> /etc/sysctl.conf
    sysctl -p
  - |
    # Configuration de la locale
    locale-gen en_US.UTF-8
    update-locale LANG=en_US.UTF-8
  - |
    # Nettoyage
    apt-get autoremove -y
    apt-get autoclean

# Configuration finale
power_state:
  mode: reboot
  delay: "+1"
  message: "Rebooting after cloud-init setup"
  condition: True
